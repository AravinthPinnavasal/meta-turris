commit 20b1e3d0ce48b7bc52ae7c33023c69cdcce62b3d
Author: Tomasz Jankowski <tomasz.jankowski@plume.com>
Date:   2019-07-10

    Add default target/map.c implementation

diff --git a/src/lib/target/src/map.c b/src/lib/target/src/map.c
index a9e0a32..ad27a52 100644
--- a/src/lib/target/src/map.c
+++ b/src/lib/target/src/map.c
@@ -1,58 +1,173 @@
+#include <stdio.h>
+#include <string.h>
+#include <fcntl.h>
+#include <ctype.h>
+#include <stdbool.h>
+#include <errno.h>
+
 #include "log.h"
 #include "target.h"
 
-bool target_map_ifname_init(void)
+typedef struct {
+    uint8_t  vif_radio_idx;
+    char*    cloud_ifname;
+    char*    device_ifname;
+    char*    bridge;
+    char*    gre_bridge;
+    uint16_t vlan_id;
+} ifmap_t;
+
+// TODO Fill with correct interfaces and bridges
+static ifmap_t  ifmap[] = {
+//    idx   cloud-ifname     dev-ifname  bridge    gre-br            vlan     description
+    { 1,    "bhaul-ap-24",   "wlan3",    "brlan0", "brlan_bhaul_24", 0 },  // 2G Backhaul
+    { 1,    "bhaul-ap-50",   "wlan2",    "brlan0", "brlan_bhaul_5",  0 },  // 5G Backhaul
+    { 2,    "home-ap-24",    "wlan0",    "br-home",  NULL,            0 },  // 2G User SSID
+    { 2,    "home-ap-50",    "wlan1",    "br-home",  NULL,            0 },  // 5G User SSID
+    { 0,    NULL,            NULL,        NULL,     NULL,            0 }
+};
+
+bool
+target_map_ifname_init(void)
 {
-    // TODO
-    LOGE("%s() is not implemented", __func__);
-    return false;
+    static bool     init = false;
+    ifmap_t         *mp;
+
+    if (init) {
+        return true;
+    }
+    init = true;
+    target_map_init();
+
+    // Register cloud <-> device interface mappings
+
+    mp = ifmap;
+    while(mp->device_ifname) {
+        target_map_insert(mp->cloud_ifname, mp->device_ifname);
+
+        mp++;
+    }
+
+    return true;
 }
 
-char* target_map_ifname_to_bridge(const char *ifname)
+char *
+target_map_ifname_to_bridge(const char *ifname)
 {
-    // TODO
-    LOGE("%s() is not implemented", __func__);
-    return "";
+    ifmap_t         *mp;
+
+    mp = ifmap;
+    while(mp->device_ifname) {
+        if (!strcmp(ifname, mp->device_ifname) || !strcmp(ifname, mp->cloud_ifname)) {
+            return mp->bridge;
+        }
+
+        mp++;;
+    }
+
+    return NULL;
 }
 
-char* target_map_ifname_to_gre_bridge(const char *ifname)
+char *
+target_map_ifname_to_gre_bridge(const char *ifname)
 {
-    // TODO
-    LOGE("%s() is not implemented", __func__);
-    return "";
+    ifmap_t         *mp;
+
+    mp = ifmap;
+    while(mp->device_ifname) {
+        if (!strcmp(ifname, mp->device_ifname) || !strcmp(ifname, mp->cloud_ifname)) {
+            return mp->gre_bridge;
+        }
+
+        mp++;;
+    }
+
+    return NULL;
 }
 
-uint16_t target_map_ifname_to_vlan(const char *ifname)
+uint16_t
+target_map_ifname_to_vlan(const char *ifname)
 {
-    // TODO
-    LOGE("%s() is not implemented", __func__);
+    ifmap_t         *mp;
+
+    mp = ifmap;
+    while(mp->device_ifname) {
+        if (!strcmp(ifname, mp->device_ifname) || !strcmp(ifname, mp->cloud_ifname)) {
+            return mp->vlan_id;
+        }
+
+        mp++;;
+    }
+
     return 0;
 }
 
-uint8_t target_map_ifname_to_vif_radio_idx(const char *ifname)
+uint8_t
+target_map_ifname_to_vif_radio_idx(const char *ifname)
 {
-    // TODO
-    LOGE("%s() is not implemented", __func__);
+    ifmap_t         *mp;
+
+    mp = ifmap;
+    while(mp->device_ifname) {
+        if (!strcmp(ifname, mp->device_ifname) || !strcmp(ifname, mp->cloud_ifname)) {
+            return mp->vif_radio_idx;
+        }
+
+        mp++;;
+    }
+
     return 0;
 }
 
-uint16_t target_map_bridge_to_vlan(const char *bridge)
+uint16_t
+target_map_bridge_to_vlan(const char *bridge)
 {
-    // TODO
-    LOGE("%s() is not implemented", __func__);
+    ifmap_t         *mp;
+
+    mp = ifmap;
+    while(mp->device_ifname) {
+        if (!strcmp(bridge, mp->bridge)) {
+            return mp->vlan_id;
+        }
+
+        mp++;;
+    }
+
     return 0;
 }
 
-char* target_map_vlan_to_bridge(uint16_t vlan_id)
+char *
+target_map_vlan_to_bridge(uint16_t vlan_id)
 {
-    // TODO
-    LOGE("%s() is not implemented", __func__);
+    ifmap_t         *mp;
+
+    mp = ifmap;
+    while(mp->device_ifname) {
+        if (vlan_id == mp->vlan_id) {
+            return mp->bridge;
+        }
+
+        mp++;;
+    }
+
     return NULL;
 }
 
-bool target_map_update_vlan(const char *ifname, uint16_t vlan_id)
+bool
+target_map_update_vlan(const char *ifname, uint16_t vlan_id)
 {
-    // TODO
-    LOGE("%s() is not implemented", __func__);
+    ifmap_t         *mp;
+
+    mp = ifmap;
+    while(mp->device_ifname) {
+        if (!strcmp(ifname, mp->device_ifname) || !strcmp(ifname, mp->cloud_ifname)) {
+            mp->vlan_id = vlan_id;
+            return true;
+        }
+
+        mp++;;
+    }
+
     return false;
 }
+
